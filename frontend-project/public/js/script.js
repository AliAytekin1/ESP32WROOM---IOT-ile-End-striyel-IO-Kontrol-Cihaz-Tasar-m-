// KullanÄ±cÄ± verilerini saklamak iÃ§in basit bir simÃ¼lasyon
let users = [
  { username: 'gorkem', email: 'gorkemgozukara601@gmail.com', password: 'gorkem3', role: 'admin' }
];

// KartlarÄ± saklamak iÃ§in bir dizi
let cards = JSON.parse(localStorage.getItem('cards')) || [
  { id: 'kart1', name: 'ğŸŸ© Fabrika KartÄ±', createdBy: 'system', visibleToAll: true, requiresPermission: false, approved: true },
  { id: 'kart2', name: 'ğŸŸ¦ Ofis KartÄ±', createdBy: 'system', visibleToAll: true, requiresPermission: false, approved: true }
];

// EriÅŸim izni isteyen kullanÄ±cÄ±larÄ± saklamak iÃ§in bir dizi
let accessRequests = JSON.parse(localStorage.getItem('accessRequests')) || [];

// KayÄ±t olma iÅŸlemi
function registerUser() {
  const username = document.getElementById('username').value;
  const email = document.getElementById('email').value;
  const password = document.getElementById('password').value;

  if (!username || !email || !password) {
    showAlert('LÃ¼tfen tÃ¼m alanlarÄ± doldurun!');
    return;
  }

   // E-posta kontrolÃ¼
   if (email === 'gorkemgozukara601@gmail.com') {
    showAlert('Bu e-posta adresi ile kayÄ±t olamazsÄ±nÄ±z!');
    return;
  }

  // KullanÄ±cÄ± adÄ± kontrolÃ¼
  if (username.toLowerCase() === 'gorkem') {
    showAlert('Bu kullanÄ±cÄ± adÄ± ile kayÄ±t olamazsÄ±nÄ±z!');
    return;
  }

  // KullanÄ±cÄ±yÄ± kaydet
  users.push({ username, email, password, role: 'user' });
  localStorage.setItem('username', username);

  // GiriÅŸ formuna yÃ¶nlendirme
  showAlert('KayÄ±t iÅŸlemi baÅŸarÄ±lÄ±! GiriÅŸ yapabilirsiniz.');
  toggleForm();
}

// GiriÅŸ yapma iÅŸlemi
function loginUser() {
  const email = document.getElementById('loginEmail').value;
  const password = document.getElementById('loginPassword').value;

  if (!email || !password) {
    showAlert('LÃ¼tfen tÃ¼m alanlarÄ± doldurun!');
    return;
  }

  // KullanÄ±cÄ± doÄŸrulama
  const user = users.find(user => user.email === email && user.password === password);
  if (user) {
    localStorage.setItem('username', user.username);
    localStorage.setItem('email', user.email);
    localStorage.setItem('role', user.role);

    if (user.role === 'admin') {
      showAlert(`GiriÅŸ baÅŸarÄ±lÄ±! HoÅŸ geldiniz, Admin ${user.username}!`);
      setTimeout(() => {
        window.location.href = 'admin.html'; // Admin sayfasÄ±na yÃ¶nlendirme
      }, 1500);
    } else {
      showAlert(`GiriÅŸ baÅŸarÄ±lÄ±! HoÅŸ geldiniz, ${user.username}!`);
      setTimeout(() => {
        window.location.href = 'home.html'; // Ana sayfaya yÃ¶nlendirme
      }, 1500);
    }
  } else {
    showAlert('E-posta veya ÅŸifre hatalÄ±!');
  }
}

// Kart ekleme iÅŸlemi
function addCard() {
  const cardName = document.getElementById('cardName').value;
  if (!cardName) {
    showAlert('Kart adÄ± boÅŸ olamaz!');
    return;
  }

  const username = localStorage.getItem('username');
  const role = localStorage.getItem('role');
  const newCard = {
    id: `kart${cards.length + 1}`,
    name: cardName,
    createdBy: username,
    visibleToAll: role !== 'admin', // Admin eklerse sadece admin gÃ¶rebilir
    requiresPermission: role === 'admin', // Admin eklerse eriÅŸim izni gerektirir
    approved: role !== 'admin' // Admin eklerse otomatik onaylanmaz
  };

  cards.push(newCard);
  localStorage.setItem('cards', JSON.stringify(cards));
  renderCards();
  document.getElementById('cardName').value = ''; // Kart adÄ± giriÅŸini temizle

  showAlert('Kart baÅŸarÄ±yla eklendi.');
}

// KartlarÄ± listeleme iÅŸlemi
function renderCards() {
  const cardList = document.getElementById('cardList');
  cardList.innerHTML = ''; // Ã–nce listeyi temizle
  const username = localStorage.getItem('username');
  const role = localStorage.getItem('role');

  cards.forEach(card => {
    // KartÄ±n gÃ¶rÃ¼nÃ¼rlÃ¼k kontrolÃ¼
    if (card.visibleToAll || card.createdBy === username || role === 'admin') {
      const cardDiv = document.createElement('div');
      cardDiv.className = 'card';
      cardDiv.textContent = card.name;

      if (card.requiresPermission && !card.approved) {
        cardDiv.textContent += ' (EriÅŸim Ä°zni Gerekiyor)';
        cardDiv.onclick = () => requestPermission(card.id, card.name);
      } else {
        cardDiv.onclick = () => goToDetail(card.id);
      }

      cardList.appendChild(cardDiv);
    }
  });
}

// KullanÄ±cÄ±larÄ±n adminin eklediÄŸi kartlara eriÅŸim izni istemesi
function requestPermission(cardId, cardName) {
  const username = localStorage.getItem('username');
  accessRequests.push({ cardId, cardName, username });
  localStorage.setItem('accessRequests', JSON.stringify(accessRequests));
  showAlert(`${cardName} kartÄ±na eriÅŸim izni iÃ§in admin onayÄ± bekleniyor.`);
}

// Adminin kullanÄ±cÄ±larÄ±n eriÅŸim isteklerini onaylamasÄ±
function approveAccessRequest(cardId, username) {
  const requestIndex = accessRequests.findIndex(req => req.cardId === cardId && req.username === username);
  if (requestIndex !== -1) {
    const card = cards.find(c => c.id === cardId);
    if (card) {
      card.approved = true;
      localStorage.setItem('cards', JSON.stringify(cards));
      showAlert(`${card.name} kartÄ±na eriÅŸim izni verildi.`);
    }
    accessRequests.splice(requestIndex, 1); // Ä°steÄŸi kaldÄ±r
    localStorage.setItem('accessRequests', JSON.stringify(accessRequests));
  }
}

// Detay sayfasÄ±na yÃ¶nlendirme
function goToDetail(cardId) {
  alert(`${cardId} detayÄ±na yÃ¶nlendiriliyorsunuz!`);
  // Burada detay sayfasÄ±na yÃ¶nlendirme iÅŸlemi yapÄ±labilir
  // Ã–rneÄŸin: window.location.href = `detail.html?card=${cardId}`;
}

// UyarÄ± mesajÄ± gÃ¶sterme
function showAlert(message) {
  const alertBox = document.getElementById('customAlert');
  const alertMessage = document.getElementById('alertMessage');

  alertMessage.textContent = `SÄ°STEM UYARISI! ${message}`;
  alertBox.classList.remove('hidden');
}

// UyarÄ± mesajÄ±nÄ± kapatma
function closeAlert() {
  const alertBox = document.getElementById('customAlert');
  alertBox.classList.add('hidden');
}

// Kart ekleme formunu kapatma
function closeCardForm() {
  const cardForm = document.getElementById('cardForm');
  cardForm.classList.add('hidden');
}